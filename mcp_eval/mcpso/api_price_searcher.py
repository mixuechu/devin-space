import os
from openai import OpenAI
from serpapi import GoogleSearch
import asyncio
import aiohttp
from typing import List, Dict, Optional, Any
import json
from tenacity import retry, wait_random_exponential, stop_after_attempt
import requests
from duckduckgo_search import DDGS
from mcp.server.fastmcp import FastMCP, Context
import httpx
from bs4 import BeautifulSoup
from typing import List, Dict, Optional, Any
from dataclasses import dataclass
import urllib.parse
import sys
import traceback
import asyncio
from datetime import datetime, timedelta
import time
import re

# 初始化客户端（密钥应通过环境变量设置）
client = OpenAI(api_key="")  # 替换为你的实际key

EXA_API_KEY = os.getenv('EXA_API_KEY', '')

@retry(wait=wait_random_exponential(min=2, max=8), stop=stop_after_attempt(5))
async def search_api_pricing(api_name: str, session: aiohttp.ClientSession) -> Optional[str]:
    """异步搜索API定价信息，拼接所有snippet和title"""
    params = {
        "q": f"{api_name} API pricing",
        "hl": "en",
        "api_key": ""  # 使用环境变量存储API密钥
    }
    try:
        async with session.get('https://serpapi.com/search', params=params) as response:
            data = await response.json()
            print(f"[SerpAPI] 完整原始响应: {data}")
            all_snippets = []
            for r in data.get("organic_results", []):
                if r.get("title"):
                    all_snippets.append(f"标题: {r['title']}")
                if r.get("snippet"):
                    all_snippets.append(f"摘要: {r['snippet']}")
            return '\n'.join(all_snippets) if all_snippets else None
    except Exception as e:
        print(f"🔍 搜索 {api_name} 失败: {str(e)}")
        return None


@retry(wait=wait_random_exponential(min=2, max=8), stop=stop_after_attempt(5))
def extract_pricing_with_gpt(raw_text: str, api_name: str) -> Optional[Dict]:
    """使用GPT-4-turbo提取结构化数据"""
    prompt = f"""请从下述文本中提取以下字段（保持JSON格式）：\n```json\n{{\n  \"信息名\": \"{api_name}\",\n  \"信息类型\": \"如api key/session/token/region/id等，尽量从api_name或上下文推断\",\n  \"是否找到价格\": \"是/否/免费/有免费额度\",\n  \"价格\": \"如$0.01/request，或免费/有免费额度/未知\",\n  \"免费额度\": \"如有免费额度请写明，没有则填空\"\n}}\n```\n待分析文本：\n{raw_text}\n\n注意：\n- 如果明确是免费，\"是否找到价格\"填"免费"，\"价格\"填"免费"。\n- 如果有免费额度，\"是否找到价格\"填"有免费额度"，\"价格\"填具体价格，\"免费额度\"写明额度描述。\n- 如果没有任何价格信息，\"是否找到价格\"填"否"，\"价格\"填"未知"，\"免费额度\"填空。\n- 信息类型尽量推断。"""

    try:
        response = client.chat.completions.create(
            model="gpt-4.1",
            messages=[{"role": "user", "content": prompt}],
            response_format={"type": "json_object"},
            temperature=0.1
        )
        return json.loads(response.choices[0].message.content)
    except Exception as e:
        print(f"🤖 处理 {api_name} 时GPT出错: {str(e)}")
        return None


async def multi_layer_search(api_name: str, session: aiohttp.ClientSession) -> (Optional[str], str, dict):
    ctx = DummyCtx()
    raw_text = await search_api_with_ddg(api_name, ctx)
    if raw_text:
        return raw_text, 'duckduckgo_html+正文', {}
    else:
        return None, 'not_found', {}


async def process_single_api(name: str, session: aiohttp.ClientSession, retry_count=0) -> Optional[dict]:
    """单个API的处理流水线"""
    if not name.strip():
        return {'信息名': name, '状态': '空API名', '错误信息': '空API名'}
    print(f"🔄 正在处理: {name}")
    try:
        raw_data, source, extra = await multi_layer_search(name, session)
        if not raw_data:
            print(f"⚠️ 未找到 {name} 的定价信息 (source: {source})")
            return {'信息名': name, '状态': '未找到定价信息', '搜索来源': source, **extra}
        # 打印传给大模型的完整输入
        print("\n================= 传给大模型的完整输入 =================")
        print(raw_data)
        print("================= 以上为完整输入 =================\n")
        # 同步调用GPT（在异步函数中通过run_in_executor调用）
        loop = asyncio.get_event_loop()
        result = await loop.run_in_executor(None, extract_pricing_with_gpt, raw_data, name)
        if result:
            result['搜索来源'] = source
            result['状态'] = '成功'
            result.update(extra)
        else:
            result = {'信息名': name, '状态': 'GPT解析失败', '搜索来源': source, **extra}
        return result
    except (DuckDuckGoBlockedException, DuckDuckGoTimeoutException) as e:
        if retry_count < 3:
            print(f"[BLOCKED/TIMEOUT] {e}，暂停30分钟后重试（第{retry_count+1}次）")
            await asyncio.sleep(1800)  # 1800秒=30分钟
            return await process_single_api(name, session, retry_count=retry_count+1)
        else:
            print(f"[BLOCKED/TIMEOUT] {name} 连续3次被block或超时，放弃该API")
            return {'信息名': name, '状态': 'DuckDuckGo被block或超时，重试3次失败', '错误信息': str(e)}


async def batch_process(api_names: List[str], batch_size: int = 5) -> List[Dict]:
    """异步批量处理"""
    connector = aiohttp.TCPConnector(limit_per_host=3)
    async with aiohttp.ClientSession(connector=connector) as session:
        semaphore = asyncio.Semaphore(10)  # 控制并发量

        async def limited_task(name):
            async with semaphore:
                return await process_single_api(name, session)

        tasks = []
        for name in api_names:
            tasks.append(limited_task(name))
            if len(tasks) >= batch_size:
                yield await asyncio.gather(*tasks)
                tasks = []
        if tasks:
            yield await asyncio.gather(*tasks)


@dataclass
class SearchResult:
    title: str
    link: str
    snippet: str
    position: int

class RateLimiter:
    def __init__(self, requests_per_minute: int = 30):
        self.requests_per_minute = requests_per_minute
        self.requests = []
    async def acquire(self):
        now = datetime.now()
        self.requests = [req for req in self.requests if now - req < timedelta(minutes=1)]
        if len(self.requests) >= self.requests_per_minute:
            wait_time = 60 - (now - self.requests[0]).total_seconds()
            if wait_time > 0:
                await asyncio.sleep(wait_time)
        self.requests.append(now)

class DuckDuckGoSearcher:
    BASE_URL = "https://html.duckduckgo.com/html"
    HEADERS = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    def __init__(self):
        self.rate_limiter = RateLimiter()
    async def search(self, query: str, ctx, max_results: int = 3) -> List[SearchResult]:
        try:
            await self.rate_limiter.acquire()
            data = {"q": query, "b": "", "kl": ""}
            await ctx.info(f"Searching DuckDuckGo for: {query}")
            async with httpx.AsyncClient() as client:
                response = await client.post(self.BASE_URL, data=data, headers=self.HEADERS, timeout=30.0)
                print(f"[DEBUG] DuckDuckGo HTTP状态码: {response.status_code}")
                print(f"[DEBUG] DuckDuckGo 返回内容前500字: {response.text[:500]}")
                if response.status_code == 202 or "anomaly-modal__title" in response.text or "Unfortunately, bots use DuckDuckGo too." in response.text:
                    raise DuckDuckGoBlockedException("DuckDuckGo blocked this IP, need to wait.")
                response.raise_for_status()
            soup = BeautifulSoup(response.text, "html.parser")
            if not soup:
                await ctx.error("Failed to parse HTML response")
                return []
            results = []
            for result in soup.select(".result"):
                title_elem = result.select_one(".result__title")
                if not title_elem:
                    continue
                link_elem = title_elem.find("a")
                if not link_elem:
                    continue
                title = link_elem.get_text(strip=True)
                link = link_elem.get("href", "")
                if "y.js" in link:
                    continue
                if link.startswith("//duckduckgo.com/l/?uddg="):
                    link = urllib.parse.unquote(link.split("uddg=")[1].split("&")[0])
                snippet_elem = result.select_one(".result__snippet")
                snippet = snippet_elem.get_text(strip=True) if snippet_elem else ""
                results.append(SearchResult(title=title, link=link, snippet=snippet, position=len(results)+1))
                if len(results) >= max_results:
                    break
            await ctx.info(f"Successfully found {len(results)} results")
            return results
        except httpx.TimeoutException:
            await ctx.error("Search request timed out")
            raise DuckDuckGoTimeoutException("DuckDuckGo search timed out, need to wait.")
        except httpx.HTTPError as e:
            await ctx.error(f"HTTP error occurred: {str(e)}")
            return []
        except Exception as e:
            await ctx.error(f"Unexpected error during search: {str(e)}")
            traceback.print_exc(file=sys.stderr)
            return []

class WebContentFetcher:
    def __init__(self):
        self.rate_limiter = RateLimiter(requests_per_minute=20)
    async def fetch_and_parse(self, url: str, ctx) -> str:
        try:
            await self.rate_limiter.acquire()
            await ctx.info(f"Fetching content from: {url}")
            async with httpx.AsyncClient() as client:
                response = await client.get(url, headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"}, follow_redirects=True, timeout=30.0)
                response.raise_for_status()
            soup = BeautifulSoup(response.text, "html.parser")
            for element in soup(["script", "style", "nav", "header", "footer"]):
                element.decompose()
            text = soup.get_text()
            lines = (line.strip() for line in text.splitlines())
            chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
            text = " ".join(chunk for chunk in chunks if chunk)
            text = re.sub(r"\s+", " ", text).strip()
            if len(text) > 8000:
                text = text[:8000] + "... [content truncated]"
            await ctx.info(f"Successfully fetched and parsed content ({len(text)} characters)")
            return text
        except httpx.TimeoutException:
            await ctx.error(f"Request timed out for URL: {url}")
            return "Error: The request timed out while trying to fetch the webpage."
        except httpx.HTTPError as e:
            await ctx.error(f"HTTP error occurred while fetching {url}: {str(e)}")
            return f"Error: Could not access the webpage ({str(e)})"
        except Exception as e:
            await ctx.error(f"Error fetching content from {url}: {str(e)}")
            return f"Error: An unexpected error occurred while fetching the webpage ({str(e)})"

# Dummy context for logging
class DummyCtx:
    async def info(self, msg): print("[INFO]", msg)
    async def error(self, msg): print("[ERROR]", msg)

class DuckDuckGoBlockedException(Exception):
    pass

class DuckDuckGoTimeoutException(Exception):
    pass

searcher = DuckDuckGoSearcher()
fetcher = WebContentFetcher()

async def search_api_with_ddg(api_name: str, ctx, max_results: int = 3) -> str:
    results = await searcher.search(f"{api_name} API pricing", ctx, max_results)
    if not results:
        return ""
    texts = []
    for r in results:
        texts.append(f"标题: {r.title}\n摘要: {r.snippet}\nURL: {r.link}")
        content = await fetcher.fetch_and_parse(r.link, ctx)
        if content and not content.startswith("Error:"):
            texts.append(f"网页正文: {content}")
    return "\n\n".join(texts)

async def main():
    # 并发参数
    batch_size = 1  # 并行批量处理
    semaphore_num = 1  # 并发 worker 数
    progress_path = 'api_pricing_results_progress.json'

    # 你的API列表
    api_names = ['github_personal_access_token', 'amap_maps_api_key', 'baidu_map_api_key', 'baidu_maps_api_key', 'tavily_api_key', 'hyper3d.ai', 'fal.ai', 'auth0', 'google login', 'ai provider api key', 'aws_access_key_id', 'aws_secret_access_key', 'aws_region', 'perplexity_api_key', 'agentql_api_key', 'openai', 'gemini', 'anthropic', 'claude', 'poe', 'openai api key', 'claude/openrouter api key', 'qwen api key', 'deepseek api key', 'glm api key', 'ollama api key', 'openrouter api key', 'exa_api_key', 'dify app key', 'openai-compatible api key', 'openrouter', 'requesty', 'figma api key', 'firecrawl_api_key', 'azure', 'google', 'baidu', 'mistral', 'moonshot', 'doubao', 'grok', 'deepseek', 'ollama', 'flomo_api_url', 'everart_api_key', 'slack_bot_token', 'slack_team_id', 'gitlab_personal_access_token', 'sentry auth token', '302ai_api_key', 'auth_token', 'ngrok_auth_token', 'ollama', 'google gemini', 'aws bedrock', 'gcp vertex', 'brave_api_key', 'google_maps_api_key', 'onspring api key (推测，需要访问onspring api)', 'planes_api_key', 'google_application_credentials', 'client_id', 'client_secret', 'tenant_id', 'kagi_api_key', 'notion_api_key', 'openai_api_key', 'kb_cloud_api_key_name', 'kb_cloud_api_key_secret', 'google_api_key', 'obsidian local rest api plugin api key', 'domo_developer_token', 'email/password', 'jwt token', 'nap api config (in .env)', 'loki_api_key', 'ods_api_key', 'policer-token', 'anthropic_api_key', 'bing_search_api_key', 'ydc_api_key', 'gemini_api_key', 'mongodb_uri', 'youtube_api_key', 'api_key', 'llm_api_key (openai or anthropic)', 'yahoo finance api', 'spotify client id', 'spotify client secret', 'anthropic (claude) api key', 'kuma_url', 'kuma_username', 'kuma_password', 'github_token', 'search_api_key', 'gmail_user', 'gmail_password (app password if 2fa)', 'outlook_tenant_id', 'outlook_client_id', 'outlook_client_secret', 'flyder_email', 'flyder_api_key', 'azure subscription key', 'azure openai api key', 'azure cli credentials', 'upstage_api_key', 'openai', 'gmail_app_password', 'tavily api key', 'miro_access_token', 'github personal access token', 'clarifai pat', 'razorpay api key', 'razorpay api key secret', 'doit_api_key', 'coze_api_token', 'coze_api_base', 'smithery api key', '自定义知识源 api key（如 sk-2123123）', 'searchapi_api_key', 'sp_api_client_id', 'sp_api_client_secret', 'sp_api_refresh_token', 'sp_api_aws_access_key', 'sp_api_aws_secret_key', 'sp_api_role_arn', 'sp_api_marketplace_id', 'sp_api_region', 'harvest_account_id', 'harvest_access_token', 'harvest_base_url', 'other mcp server-specific api keys (as required)', 'token', 'mermaid_chart_access_token', 'enkryptai_api_key', 'vapi_token', 'patsnap api credentials', 'valid_token', 'c8y_base_url', 'c8y_tenant_id', 'c8y_username', 'c8y_password', 'neo4j_uri', 'neo4j_username', 'neo4j_password', 'neo4j_database', 'openhab_token', 'gitlab_token', 'serper_api_key', 'inkeep_api_key', 'gas_web_app_url', 'gas_api_key', 'juhe_news_api_key', 'hologres_user', 'hologres_password', 'openweathermap_api_key', 'misp_api_key', 'github oauth client_id', 'github oauth client_secret', 'x-access-token', 'raindrop_access_token', 'quip_token', 'oauth refresh token (squadcast)', 'ncbi/pubmed api key (optional for higher throughput)', 'clinicaltrials.gov api key (optional', 'if needed)', 'mymcpspace api token', 'amap_api_key', 'jira_host', 'jira_email', 'jira_api_token', 'cassandra_password', 'cassandra_contact_points', 'cassandra_local_dc', 'cassandra_keyspace', 'cassandra_username', 'ticktick api access token', 'ticktick client_id', 'ticktick client_secret', 'notepm_api_token', 'mongodb atlas api key (implied', 'not explicitly documented)', 'google_client_id', 'google_client_secret', 'google_refresh_token', 'agent_api_key', '通义千问api key', 'openai api key（可选，视所用模型而定）', 'razorpay_api_key', 'bitpin api key', 'bitpin api secret', 'weather_api_key', 'google cloud service account key (未在文档中明确说明)', 'google cloud iam/gcloud cli credentials', 'keitaro_api_key', 'naver_client_id', 'naver_client_secret', 'vercel_api_key', 'github_api_key', 'next_public_supabase_url', 'next_public_supabase_anon_key', 'n8n_api_key', 'jira_token', 'google cloud oauth 2.0 credentials (credentials.json)', 'google calendar api token (token.json)', 'esa_token', 'esa_team_name', 'mcp_jobs_api_key', 'pluggedin_api_key', 'google ai api key (gemini)', 'sfcc_admin_client_id', 'sfcc_admin_client_secret', 'qasphere_api_key', 'jira_base_url', 'jira_username', 'bluesky_handle', 'bluesky_app_password', 'rapidapi (可能需要)', '未明确说明', 'aws iam credentials (sigv4 signing)', 'zan_api_key', 'linear_api_key', 'pocketbase_api_url', 'pocketbase_admin_token', 'plex_token', 'jwt secret (需自定义)', 'postgresql/sqlite配置', 'querypie_api_key', 'allora_api_key', 'apikey', 'slack_api_key', 'censys_api_id', 'censys_api_secret', 'upcloud_username', 'upcloud_password', 'claude (可能需要)', 'unreal engine (无需apikey)', 'surrealdb_user', 'surrealdb_pass', 'hcloud_token', 'auth_secret (自生成)', '可能需要ollama相关密钥', 'lv_session_token', 'lv_site_id', 'todoist_api_key', 'bing_webmaster_api_key', 'anthropic api key (claude)', 'optional: amazon bedrock access', 'google cloud oauth credentials', 'maestro_api_key', 'clickhouse_api_key_id', 'clickhouse_api_secret', 'oauth (未明确具体类型)', 'openai api key', 'contextual ai api key', 'morelogin api key', 'google cloud oauth credentials.json', 'wandb_api_key', 'shopify-access-token', 'rime_api_key', 'logseq_token', 'dodo_payments_api_key', 'db_user', 'db_password', 'news api', 'yahoo finance', 'anthropic api key', 'mcp_api_key', 'elevenlabs_api_key', 'google search console api service account credentials', 'azure_openai_api_key', 'supabase_project_ref', 'supabase_db_password', 'supabase_region', 'supabase_access_token', 'supabase_service_role_key', 'logseq authentication token', 'untappd:clientid', 'untappd:clientsecret', 'bitrise_token', 'ragflow-dhmzviyzjlmtm1njexzjbinwu5mdi0mm', 'jwt_secret', 'notion_api_key', 'api_key', 'docketbird_api_key', 'wrike_api_token', 'telegram_token', 'chat_id', 'agent_api_keys', 'custom_api_key_1', 'custom_api_key_2', 'mcpo_api_key', 'amap-maps apikey', 'brave-search apikey', 'tavily apikey', 'strava_client_id', 'strava_client_secret', 'your-secret-api-key', 'mqtt-user', 'mqtt-password', 'bybit_api_key', 'bybit_secret_key', 'gaode_api_key', 'dingtalk_access_token', 'alphavantage', 'newsdata.io', 'authorization (bearer token', 'user-provided)', 'steampipe插件token（如github token）', 'serpapi_key', 'feishu_app_id', 'feishu_app_secret', 'google oauth 2.0 credentials (credentials.json)', 'openai（推测，未明确说明）', 'ycloud api key', 'wrike_access_token', 'resource', 'api_access_token', 'korea weather service api key (from data.go.kr)', 'twilio_account_sid', 'twilio_auth_token', 'twilio_number', 'ngrok_authtoken', 'roblox_api_key', 'roblox_open_cloud_api_key', 'authorize_net_api_login_id', 'authorize_net_transaction_key', 'github_enterprise_url', 'atlassian_token', 'alpaca_paper_api_key', 'alpaca_paper_api_secret', 'usensedata_api_key', 'usensedata_api_userid', 'omni', 'google_gemini_api_key', 'usda_api_key', 'google cloud service account json', 'pinecone_api_key', 'zhitu_token', 'openrouter_api_key', 'google cloud service account json key', 'stock_api_key', 'npm_token', 'figma_api_key', 'twenty_first_api_key', 'azalea health fhir api client id', 'sendgrid_api_key', 'from_email', 'openai_model', 'etherscan_api_key', 'circleci_token', 'aws credentials', 'deepmyst api key', 'braintree_merchant_id', 'braintree_public_key', 'braintree_private_key', 'private_key', 'kaggle api key', 'openrouter (可能需要)', 'upsonic (未明确)', 'cloudautomator_api_key', 'mistral_api_key', 'notion api key', 'notion database id', 'sentry_org_id', 'sentry_project_id', 'sentry_api_token', 'qb_client_id', 'qb_client_secret', 'qb_realm_id', 'qb_access_token (optional)', 'pco_secret_key', 'pco_application_id', 'freepik flux ai api (推测)', 'quickbooks_client_id', 'quickbooks_client_secret', 'quickbooks_access_token', 'quickbooks_realm_id', 'quickbooks_redirect_uri', 'google calendar oauth 2.0 credentials', 'freepik_api_key', 'llm_api_key', 'claude_api_key', 'qdrant_api_key', 'fal_key', 'notion_api_token', 'tushare_token', 'kibana_api_key', 'kibana_username', 'kibana_password', 'strava_access_token', 'strava_refresh_token', 'deepseek_api_key', 'mnemonic', 'jfrog_access_token', 'jfrog_url', 'hcp_terraform_token', 'hcp_terraform_org', 'rcon_password', 'smithery key', 'evmprivatekey', 'gmail api credentials (oauth 2.0 credentials.json)', 'anthropic_key', 'ollama_model', 'wallet_password', 'api key', 'oauth2.1', 'open', 'google oauth 2.0 credentials', 'twitter_api_key', 'twitter_api_secret', 'twitter_access_token', 'twitter_access_token_secret', 'notion_token', 'ebay_app_id', 'ebay_client_id', 'mysql_user', 'mysql_pass', 'byterover-public-api-key', 'user-id', 'llm-key-name', 'model', 'mackerel_api_key', 'timetagger_api_key', 'translation_api_key', 'translation_model', 'translation_base_url', 'appid (entra app registration)', 'certificatebase64encoded', 'certificatepassword', 'tenantid', 'tenanturl', 'jama_client_id', 'jama_client_secret', 'jama_url', 'jama_aws_secret_path', 'jama_aws_profile', 'emacsclient', 'fmp_key', 'sec_access (可选)', 'ct.data.gov app token', 'alpha_vantage_api_key', 'odoo_mcp_token', 'odoo_username', 'odoo_password', 'claude ai api credentials', 'rapidapp_api_key', 'networksdb_api_key', 'azure_storage_account_name', 'azure_storage_account_key (可选，可用azure cli登录替代)', 'logseq_api_token', 'logseq_api_key', 'google api oauth 2.0 credentials', 'serper api', 'supabase_url', 'supabase_service_key', 'smithery bearer token', 'github personal access token (pat)', 'google gemini api key', 'real debrid account (token/apikey)', 'news_api_key', 'google_generative_ai_api_key', 'rapidapi_key', 'spotify', 'lastfm', 'agglayer_api_key', 'smarthr_api_key', 'google api credentials (oauth 2.0)', 'groq_api_key', 'elevenlabs_api_key', 'linkup_api_key', 'llm_api_key', 'linear api key', 'smithery_api_key', 'notion_database_id', 'koreandict_api_key', 'gmail api (oauth)', 'sentry_auth_token', 'smithery에서 발급 받은 키', 'openai-compatible embedding provider api key', 'privatekey（仅用于需要签名的链上写操作）', 'figma账号', 'github token', 'procesio_api_key', 'procesio_api_value', 'procesio_username', 'procesio_password', 'miro_api_token', 'defaultazurecredential (支持azure cli、环境变量、托管身份等)', 'kakao rest api key', 'notion_token_v2', 'notion_file_token', 'azure_subscription_id', 'azure_iothub_name', 'redirect_uri', 'database_url', 'pg_mcp_url', 'gridly_api_key', 'seoul_api_key', 'simplenote_email', 'simplenote_password', 'kakao_rest_api_key', 'nova_act_api_key', 'google generative ai api key (google_api_key)', 'binance-api-key', 'binance-secret-key', 'dda23bec-caa6-4487-a1e9-eb74e22e33eb', 'google app-specific password', 'huggingface_api_key', 'claude 3.7 sonnet api key（未明确说明，但实际必需）', 'operative_api_key', 'buildkite_access_token', 'cwa_api_key', 'futuur_public_key', 'futuur_private_key', 'monday_api_key', 'monday_board_id', 'google cloud oauth 2.0 credentials', 'google api access token', 'openmetadata_jwt_token', 'openmetadata_username', 'openmetadata_password', 'azure cli/defaultazurecredential', 'open_ai_api_key', 'github_client_id', 'github_client_secret', 'bearer_token', 'pg_host', 'pg_port', 'pg_user', 'pg_password', 'pg_database', 'twitter_username', 'twitter_password', 'twitter_email', 'twitter_api_secret_key', 'zoom_client_id', 'zoom_client_secret', 'zoom_account_id', 'serp_api_key', 'token（可选）', 'jenkins_api_token', 'zendesk_api_token', 'entrez.email', 'tg_api_id', 'tg_api_hash', 'phone', 'canva_app_id', 'canva_api_key', 'google gmail api oauth 2.0 credentials', 'kafka_api_key', 'kafka_api_secret', 'kafka_rest_endpoint', 'kafka_cluster_id', 'kafka_env_id', 'flink_env_id', 'flink_rest_endpoint', 'flink_env_name', 'flink_database_name', 'flink_api_key', 'flink_api_secret', 'flink_compute_pool_id', 'confluent_cloud_api_key', 'confluent_cloud_api_secret', 'confluent_cloud_rest_endpoint', 'schema_registry_api_key', 'schema_registry_api_secret', 'schema_registry_endpoint', 'github cli (gh auth login)', 'bailian api key', 'smtp_user', 'smtp_password', 'mailchimp api key', 'mongodb atlas（未明确说明具体key名称）', 'new_relic_api_key', 'new_relic_account_id', 'azure_openai_endpoint', 'sentry_client_id', 'sentry_client_secret', 'oauth_api_token', 'meteostat api (未明确说明)', 'google_redirect_uri', 'mailtrap_api_token', 'rapidapi (for linkedin profile server)', 'github_personal_access_token (optional', 'for some server configs)', 'stay_ai_api_key', 'trakt_client_id', 'trakt_client_secret', 'bedrock llm access', 'rds database credentials', 'openrouterapikey', 'zep_api_key', 'claude api key', 'gemini api key', 'deepseek api key', 'moonshot api key', '火山方舟 api key', '阿里百炼 api key', '百度千帆 api key', '腾讯混元 api key', '智谱 api key', 'open router api key', 'grok api key', '硅基流动 api key', 'feishu_client_id', 'feishu_client_secret', 'wecom_client_id', 'wecom_agent_id', 'wecom_client_secret', 'dingding_client_id', 'dingding_client_secret', 'auth_secret', 'admin_code', 'claude api (anthropic)', 'orkl api (未明确说明具体变量名，但推测需要)', 'peaka_api_key', 'microcms_api_key', 'bsky_id', 'bsky_password', 'bsky_backup_id', 'bsky_backup_password', 'nsec', 'membase_account', 'membase_secret_key', 'nifi api key', 'llm api key', 'entra id', 'github', 'wolfram_app_id', 'moodle_token', 'jina_api_key', 'stripe_api_key', 'linux_do_api_key', 'linux_do_username', 'jwt bearer token', 'operative.sh api key', 'qlik_api_key', 'dd_api_key', 'dd_app_key', 'strava api key', '其他mcp服务api key（如brave search、google search、weather等）', 'publishable_key', 'medusa_username', 'medusa_password', 'w3_login_email', 'your_openai_api_key', 'your_openrouter_api_key', 'your_gemini_api_key', 'hubspot api access token', 'sse api key (自定义验证服务)', 'mantis_api_key', 'plane_api_key', 'last9_auth_token', 'last9_base_url', 'last9_refresh_token', 'n8n api key (推测，未明确给出)', 'trello_api_key', 'trello_token', 'bochaai_api_key', 'dust_api_key', 'dust_workspace_id', 'dust_agent_id', 'onyx_api_token', 'personal_access_token', 'planetscale_host', 'planetscale_username', 'planetscale_password', 'strapi_jwt_token', 'neon_api_key', 'intervals.icu api key', 'octagon_api_key', 'blogger_api_key', 'siyuan_token', 'paddle_api_key', 'lnd_tls_cert_path', 'lnd_macaroon_path', 'lndconnect_url', 'supabase project id', 'supabase database password', 'vercel access token', 'api_key（可选，用户自定义环境变量中配置）', 'rivers_org_token', 'clash_api_key', 'steam_api_key', 'brandfetch_api_key', 'brandfetch_client_id', 'mysql_password', 'atlassian_api_token', 'atlassian_bitbucket_app_password', 'tinypng_api_key', 'playfab_title_id', 'playfab_dev_secret_key', 'redmine_api_key', 'agentset_api_key', 'agentset_namespace_id', 'jira', 'alibaba_cloud_access_key_id', 'alibaba_cloud_access_key_secret', 'ftp_host', 'ftp_port', 'ftp_user', 'ftp_password', 'ftp_secure', 'dappier_api_key', 'couchbase_url', 'couchbase_bucket', 'couchbase_username', 'couchbase_password', 'bitrefill_api_id', 'bitrefill_api_secret', 'bluesky_identifier', 'bluesky_service_url', 'luma_api_key', 'ynab_api_token', 'codelogic_server_host', 'codelogic_username', 'codelogic_password', 'codelogic_mv_name', 'confluence_token', 'server_key', 'shodan_api_key', 'whoop_email', 'whoop_password', 'embedding_url', 'ollama_url', 'postgres_db', 'postgres_user', 'postgres_password', 'postgres_host', 'postgres_port', 'figma_access_token', 'onos_username', 'onos_password', 'binance_api_key', 'binance_secret', 'coinbase_api_key', 'coinbase_secret', 'kraken_api_key', 'kraken_secret', 'weather api key (如openweathermap)', 'google search api key', '可能的摄像头控制api key', 'api_key (quran.com api)', 'pocketbase_admin_email', 'pocketbase_admin_password', 'oauth2 provider credentials (如google oauth2)', 'clickup_api_key', 'team_id', 'agentforce reliable server api key (generated during configuration)', 'congress_gov_api_key', 'hirebase_api_key', 'openweathermap', 'notion integration secret (bearer token)', 'github api', 'other service apis as configured in .env', 'sentry_auth', 'jira api key', 'github token', 'slack api key', 'ms teams api key', 'groq ai api key', 'shopify_access_token', 'nocodb_url', 'nocodb_api_token', 'nocodb_base_id', 'google gemini api key', 'putio_token', 'heroku_api_key', 'oauth2', 'client_id', 'token_endpoint', 'zerodha_api_key', 'zerodha_api_secret', 'oauth', 'https keys', 'refresh_token', 'mysql_host', 'mysql_database', 'mysql_port', 'mysql_allow_write_ops', 'db_host', 'db_port', 'db_name', 'fred_api_key', 'googleapikey', 'tavily key', 'shared_access_token (optional)', 'aws_profile', 'token_metrics_api_key', 'oauth client_id', 'oauth client_secret', 'issuer_url', 'aws', 'google cloud', 'agentic_search_api_key', 'whatsapp_api_token', 'whatsapp_phone_number_id', 'whatsapp_business_account_id', 'rad_security_access_key_id', 'rad_security_secret_key', 'rad_security_account_id', 'sk_app_key', 'neo4j_user', 'tinkoff invest api key（推测，未明确列出）', 'azure账号/凭证', 'webflow_token', 'xaiapi_key', 'novacv_api_key', 'dummy', 'weread_cookie', 'unifuncs_api_key', 'your_api_key', 'bigmodel api', 'teams_app_id', 'teams_app_password', 'teams_app_type', 'teams_app_tenant_id', 'teams_channel_id', 'wordpress_application_password', 'linkding_api_key', 'pixabay_api_key', 'cloudflare workers account', 'ai binding (cloudflare ai)', 'aws_s3_bucket_name', 'typecast_api_key', 'aws api key (推测，但未明确说明)', 'qweather_api_key', 'functions-mcp-extension-system-key', 'apple developer team id', 'apple music key id', 'apple music api key (.p8 file)', 'linear api key', 'gallabox_api_key', 'gallabox_api_secret', 'channel_id', 'ras_username', 'ras_password', 'weather_api_key', 'dashscope_api_key', 'promptql api key', 'ddn url', 'strava api key (未在content中明确说明)', 'username', 'password', 'confluence_base_url', 'username', 'api_token', 'deepgram_api_key', 'gladia_api_key', 'speechmatics_api_key', 'assemblyai_api_key', 'api_token (confluence api token)', 'username (atlassian账号邮箱)', 'onepay.la apikey (推测，未明确说明)', 'canvas_api_token', 'canvas_domain', 'azure_tenant_id', 'azure_client_id', 'azure_client_secret', 'coingecko_api_key (optional)', 'twelvelabs_api_key', 'paypal_client_id', 'paypal_client_secret', 'paypal_access_token', 'oauth2 code (如google code)', 'slidespeak_api_key', 'tacitbase_auth_token', 'typesense_api_key', 'nf_api_key', 'gong_access_key', 'gong_access_secret', 'google cloud oauth client id/secret', 'spotify api credentials', 'rapidapi (用于linkedin数据)', 'cloudstack api key', 'es_api_key', 'es_username', 'es_password', 'supabase api key', 'youtube api key', 'serpapi key', 'voyage_api_key', 'woocommerce_consumer_key', 'woocommerce_consumer_secret', 'applicationcredentialid', 'applicationcredentialsecret', 'groq_api_key', 'prefect_api_key', 'hana_host', 'hana_port', 'hana_user', 'hana_password', 'hana_schema', 'azure相关凭据（未明确字段名）', 'meili_api_key', 'whoop_api_key', 'facebook_app_id', 'facebook_app_secret', 'facebook_access_token', 'facebook_account_id', 'caiyun_api_key', 'powerdrill_user_id', 'powerdrill_project_api_key', 'zionfhe_apikey', 'vsegpt_api_key', 'agentset_api_key', 'openai_api_key', 'ai_webhook_api_key', 'api_token', 'api_secret', 'sentry_token', 'ordiscan_api_key', 'upstox access token', 'unity_email', 'unity_password', 'unity_license', 'anthropic claude api key（未在文档中明确给出，但集成时必需）', 'kagi api key (未在文档中明确说明，但实际必需)', 'spotify_client_id', 'spotify_client_secret', 'spotify_refresh_token', 'kaggle_username', 'kaggle_key', '其他 llm api key（可选）', 'cloudflare api key (未在文档中明确说明，但部署必需)', 'jenkins-username', 'jenkins-password', 'memos_token', 'api_key_header', 'bearer_token', 'api_username', 'api_password', 'google drive', 'slack', 'stripe', 'kagi search', 'notion', 'chargebee', 'zbd', 'fathom analytics', 'cloudflare', 'sentry', 'raygun', 'nytimes', 'tavily', 'bluesky', 'tiktok', 'qdrant', 'mongodb', 'snowflake', 'bigquery', 'airtable', 'postman', 'keycloak', 'clicksend_username', 'clicksend_api_key', 'qiniu_access_key', 'qiniu_secret_key', 'email', 'email_password', 'imap_host', 'imap_port', 'smtp_host', 'smtp_port', 'secret', 'anthropic api key (推测)', 'openweather_api_key', 'ip_geolocation_api_key', 'asgardeo client_id', 'asgardeo client_secret', 'futu openapi token/key（需在富途获取，文档未明确字段名）', 'shiphero_api_key', 'shiphero_api_secret', 'shipbob_api_key', 'coinmarketcap_api_key', 'ipinfo_token', 'bugsnag_api_key', 'stackexchange_api_key', 'stackexchange_client_id', 'microsoft bing search api key', '2af255ea5618467d914c67a8beeca31d', '2af255ea5618467d914c67a8beeca51c', 'client_secret', 'shipstation_api_key', 'shipstation_api_secret', 'lara_access_key_id', 'lara_access_key_secret', 'google oauth client_id', 'google oauth client_secret', 'google oauth access_token', 'google oauth client id', 'google oauth client secret', 'google access token', 'puremd_api_key', '自有api key（需邮件申请）', 'burp_api_key', 'sec_api_user_agent', 'confluence_api_token', 'azure_devops_org_url', 'azure_devops_pat', 'gumroad_access_token', 'gumroad_base_url (optional', 'for self-hosted instances)', 'googleclientid', 'googleclientsecret', 'googlerefreshtoken', 'glama_api_key', 'cursor_api_key', 'webhook_url', 'azure_openai_model', 'riza_api_key', 'needle_api_key', 'ramp_client_id', 'ramp_client_secret', 'oxylabs_username', 'oxylabs_password', 'integration_app_token', 'integration_key', 'axiom_token', 'axiom_url', 'axiom_org_id', 'public_housing_api_key', 'apartment_list_api_key', 'apartment_info_api_key', 'lark api key (具体变量未列出)', 'cosmosdb_account_key', 'figma_api_key', 'jira_api_key', 'audiense account authorization (token or api key', 'not explicitly named)', 'pushinator_api_key', 'tg_app_id', 'linode_api_token', 'email_user', 'email_pass', 'pop3_server', 'pop3_port', 'smtp_server', 'voyp_api_key', 'salesforce connected app consumer key (clientid)', 'salesforce username', 'salesforce private key', 'salesforce login url', 'mem0_api_key', 'moralis_api_key', 'nwc_connection_string', 'didlogic_api_key', 'deepseek v3 api密钥', 'openai compatible api密钥', 'sf_login_url', 'sf_username', 'sf_password', 'sf_security_token', 'redis_password', 'tandoor_api_token', 'github personal access token', 'goscry_security_apikey', 'google oauth credentials.json', 'nessus_access_key', 'nessus_secret_key', 'google api (gcp)', 'db_cluster_arn', 'db_secret_arn', 'unsplash_access_key', 'unstructured_api_key', 'googledrive_service_account_key', 'mongo_db_connection_string', 'oauth 2.1', 'amap.key', 'aws_access_secret_key', 'magento 2 admin api access token', 'alapi_token', 'secureannex_api_key', 'todoist api token', 'your_github_token', 'google search (推测需要，但未明确说明)', 'greptile_api_key', 'abuseipdb api token', 'google drive api key (推测)', 'gitlab access token', 'bauplan_api_key', 'github_gist_token', '<other service-specific api keys depending on the server>', 'limitless_api_key', 'mysql credentials (in mysql.js)', 'hubspot_access_token', 'zaico api key', 'openai.apikey', 'nasdaq_data_link_api_key', 'rapid_api_key_imdb', 'unifi_api_key', 'mcss_api_key', 'panos_api_key', 'api-key (for cloud client)', 'kintone_username', 'kintone_password', 'kintone_api_token', 'ticktick_client_id', 'ticktick_client_secret', 'ticktick_access_token', 'ollama_host', 'palo alto networks api key (未在content中明确说明如何配置)', 'api_gateway_token', 'jwtsecret', 'chatwork_api_token', 'azureopenai_api_key', 'azureopenai_endpoint', 'azureopenai_api_version', 'azureopenai_model', 'riot games api key', 'jenkins_url', 'jenkins_username', 'jenkins_password', 'jenkins_token', 'bee_api_token', 'synapse api key', 'oauth2 client_id', 'oauth2 client_secret', 'oauth2 redirect_uri', 'mattermost_token', 'weather_api.key', 'edgee_token', 'google cloud service account key (未在content中明确说明)', 'dolphinscheduler_api_key', 'tibber_api_token', 'airflow_api_base', 'airflow_username', 'airflow_password', 'coherence_api_key', 'coherence_check_model', 'indian stock exchange api key', 'google oauth 2.0 client secret', 'google sheets api', 'google drive api', 'gitcode_token', 'klaviyo_api_key', 'postscript_api_key', 'triple_whale_api_key', 'triple_whale_shop_id', 'elevar_api_key', 'northbeam_api_key', 'gorgias_api_key', 'gorgias_access_token', 'ankr_api_token', 'anthropic', 'zap api key', 'azure_credentials', 'fal.ai api key', 'telegram_api_id', 'telegram_api_hash', 'zyla api hub api key', 'kakao_api_key', 'claude_desktop_github_token', 'marinetraffic_api_key', 'n2yo_api_key', 'cloudflare account (wrangler login', 'oauth/token)', 'flightradar24_api_key', 'google search console oauth client_secrets.json', 'google search console service_account_credentials.json', 'angle_one_publisher_api_key', 'angle_one_client_id', 'angle_one_pin', 'angle_one_totp', 'next_public_azure_client_id', 'next_public_azure_client_secret', 'next_public_azure_tenant_id', 'google service account json credentials', 'pa_api_key', 'webflow_token', 'airtop_api_key', 'esignatures_secret_token', 'mobsf_api_key', 'voipbin_api_key', 'v2ex_api_key', 'cloudinary api key (推测)', 'yourware_api_key', 'bitly_api_key', 'snowflake account', 'snowflake user', 'snowflake password', 'snowflake warehouse', 'snowflake database', 'snowflake schema', 'snowflake role', 'postgresql connection string (username', 'host', 'database)', 'wordpress_username', 'wordpress_password', 'linear_api_key', 'github_personal_access_token', 'shopify custom app access token', 'txyz_api_key', 'client_id (aps api)', 'scrapeless_key', 'keyring_cryptfile_password (环境变量，用于docker加密keyring文件)', 'llm provider (e.g.', 'openrouter)', 'app_id', 'ethereum_node_url', 'vechain_node_url', 'max_api_key', 'max_api_secret', 'bearer token', 'api token', 'infura_api_key', 'alchemy_api_key', 'private_key_encryption_key', 'wallet_private_key', 'other third-party service api keys as required (e.g.', 'etc.)', 'coding personal access token', 'vertex_project_id', 'vertex_key_file', 'api-key', 'sonarr api key', 'radarr api key', 'algolia_application_id', 'algolia_search_api_key', 'algolia_index_name', 'smartlead_api_key', 'lta_api_key', 'whatsapp api key (token)', 'token', 'apikey (for sse authentication', 'youtube data api key', 'gcp_oauth_keys', 'gcp_saved_tokens', 'zapier_mcp_url', 'pghost', 'pgport', 'pguser', 'pgpassword', 'pgdatabase', 'meraki_api_key', 'logfire_api_key (optional)', 'cloud_sword_access_key_id', 'cloud_sword_access_key_secret', 'cloud_sword_security_token', 'taximail api key', 'taximail secret key', 'google sheets api key', 'discord api key', 'aws_sso_start_url', 'new_relic_region', 'gurufocus', 'jira', 'zephyr', 'rpc_endpoint', 'payment_wallet_seed', 'arcanna_input_api_key', 'arcanna_host', 'arcanna_user', 'kalshi_api_key', 'kalshi_private_key_path', 'fewsats_api_key', 'api_id', 'api_hash', 'dingtalk_agent_id', 'dingtalk_key', 'dingtalk_secret', 'ai_provider_api_key', 'starknet_public_address', 'starknet_private_key', 'starknet_rpc_url', 'server_api_key', 'discord_bot_token', 'flux_api_token', 'flux_api_url', 'serpapi_api_key', 'search_intent_api_key', 'supavec_api_key', 'typesense api key', 'storm_api_key', 'hf_token', 'mysql username', 'mysql password', 'user_id', 'password', 'port_client_id', 'port_client_secret', 'bscscan_api_key', 'arbiscan_api_key', 'polygonscan_api_key', '等各链浏览器api key', 'feishu_app_token', 'feishu_table_id', 'kubeconfig', 'in-cluster service account', 'heurist_api_key', 'workato_api_token', 'mattermost token', 'honeycomb_api_key', 'inkdrop_local_username', 'inkdrop_local_password', 'olostep_api_key', 'metamcp_api_key', 'huggingface_token', 'supos_api_key', 'supos_api_url', 'supos_mqtt_url', 'datahub_gms_token', 'visual_model_api_key', 'dialogflow_api_key', 'project_id', 'location', 'agent_id', 'quip_access_token', 'hibp_api_key', 'aviationstack_api_key', 'appbuilder_token', 'adamik_api_key', 'openaiapikey', 'openai api key（未明确说明）', 'slack signing secret', 'slack app token', 'slack bot token', 'together_api_key', 'openai_api_version', 'amazon_bedrock_model_id', 'anthropic claude api key', 'cognito_username', 'cognito_password', 'user_pool_id', 'app_client_id', 'cognito_region', 'identity_pool_id', 'api_gateway_region', 'jupyter notebook token', '（其他交易所api key/secret）', 'feishu app credentials', 'lark_app_id', 'lark_app_secret', 'folder_token', 'minio_access_key', 'minio_secret_key', 'flomo_api_url', 'openai_api_url', 'firefly_access_key', 'firefly_secret_key', 'ashra_api_key', 'inbox_user_token', 'crunchbase_api_key', 'auth token (from morningstar)', 'clickup_team_id', 'tripadvisor_api_key', 'google workspace admin email', 'ak', 'sk', 'tapd_client_id', 'tapd_client_secret', 'tapd_workspace_id', 'aws credentials (from ~/.aws)', 'caiyun_weather_api_token', 'deepsource_api_key', 'd365_url', 'firebird_user', 'firebird_password', 'oauth_client_secret (optional', 'for oauth2 integration)', 'gaode_key', 'arcgis_location_service_api_key', 'yepcode_api_token', 'google calendar api', 'authorization bearer', 'explorium_api_key', 'alphavantage_api_key', 'various third-party service api keys depending on the server (e.g.', 'shioaji api key（未明确说明）', 'obsidian local rest api key', 'loinc.org username', 'loinc.org password', 'fofa_email', 'fofa_key', 'shioaji_api_key', 'shioaji_secret_key', 'votars_api_key', '通义千问 api-key', 'openai api-key（可选）', 'dashscope', 'zhipuai', 'moonshot', 'ark', 'ollama', '通义千问的key', 'openai的key（如用openai模型）', 'google oauth 2.0 client id/secret', 'microsoft account (xbox live credentials)', 'llm api key (具体类型未说明)', 'llm_base_url', 'ollama_model_name', 'ollama_base_url', 'seatunnel_api_key', 'google calendar api credentials', 'strava client_id', 'strava client_secret', 'builtwith_api_key', 'puppygraph_url', 'puppygraph_username', 'puppygraph_password', 'puppygraph_gremlin_url', 'puppygraph_gremlin_username', 'puppygraph_gremlin_password', 'puppygraph_schema_url', 'puppygraph_schema_username', 'puppygraph_schema_password', 'cosmosdb connection key (推测)', 'altassian_token', 'altassian_username', 'jira_api_url', 'google oauth2 credentials (credentials.json)', 'tenor api key', 'kipris_api_key', 'azure_pat', 'upbit_access_key', 'upbit_secret_key', 'linkedin client credentials (unofficial api)', 'dixa_api_key', 'cb_connection_string', 'cb_username', 'cb_password', 'cb_bucket_name', 'amadeus_api_key', 'redis_url (环境变量)', 'vercel账号', 'boomi_token', 'auth0 (device authorization flow)', 'linkedin account oauth', 'okta_api_token', 'github personal access token (推测)', 'apikey', 'medium api credentials', 'aliyun_access_key_id', 'aliyun_access_key_secret', 'tess_api_key', 'ga_property_id', 'ga_client_email', 'ga_private_key', 'aep_client_id', 'aep_client_secret', 'aep_org_id', 'modelname', 'baseurl', 'github copilot access token', 'llm provider api key', 'bearer token（如sse远程服务authorization）', 'patronus_api_key', 'nano_private_key', 'hubspot_api_key', 'jina', 'newsapi_key', 'solsniffer', 'sfmc_client_id', 'sfmc_client_secret', 'sfmc_auth_base_uri', 'sfmc_rest_base_uri', 'sfmc_account_id', 'nano_rpc_url', 'nano_work_generation_url', 'nano_max_send_amount', 'dify_dataset_api_key', 'medullar_jwt', 'x-magicapi-key', 'github cli oauth/token（通过gh auth login获取）', 'couchbase_connection_string', 'confluence-token', 'jira-token', 'confluence-personal-token', 'jira-personal-token', 'dumpling_api_key', 'mindbody api key', 'linkup_api_key', 'gcp_service_account_key', 'cloudinary_url', 'dataset_id', 'vertex_ai_location', 'mysql 用户名', 'mysql 密码', 'codacy_account_token', 'hevy_api_key', 'canvas_access_token', 'google api credentials', 'api key', 'mutual tls', 'github_personal_access_token (for github mcp server', 'optional for some integrations)', 'rapidapi key (for twitter154 api)', 'discord_client_id', 'discord_public_key', 'mastra_url', 'zeropath_token_id', 'zeropath_token_secret', 'zeropath_org_id', 'amadeus_client_id', 'amadeus_client_secret', 'todoist_api_token', 'vercel_token', 'shopify_api_key', 'shopify_api_secret', 'etsy_api_key', 'vite_stytch_public_token', 'stytch_project_id', 'stytch_secret', 'bing search api (required)', 'google search api (optional)', 'esa_access_token', 'langsmith_api_key', 'teamwork_domain', 'teamwork_username', 'teamwork_password', 'modelscope api key', 'dashscope api key (via email/manual request)', 'bicscan_api_key', 'redis_url', 'mongodb_url', 'fs_base', 'http_base', 'http_headers', 'blocknative', 'bscscan', 'polygonscan', 'serper api key', 'bfl_api_key', 'gotohuman_api_key', 'searxng_username', 'searxng_password', 'db_pass', 'ssh_private_key_path', 'discord_token', 'fubon_username', 'fubon_password', 'fubon_pfx_path', 'taiga_username', 'taiga_password', 'semgrep_app_token', 'shortcut_api_token', 'wordware api key', 'qase_api_token', 'jira api token（如需集成jira）', 'recall_private_key', 'recall_network', 'recall_bucket_alias', 'recall_log_prefix', 'tmdb_api_key', 'access_token', 'sd_webui_url', 'sd_auth_user', 'sd_auth_pass', 'paragon_project_id', 'signing_key', 'user', 'mailpace_api_token', 'netbird_api_token', 'test-key', 'ntopng_user', 'ntopng_password', 'terrakube_api_url', 'terrakube_pat_token', 'google_drive_folder_id', 'thirdweb_secret_key', 'sk_test', 'opendota_api_key', 'cw_company_id', 'cw_public_key', 'cw_private_key', 'cw_url', 'unsplash api access key', 'box_client_id', 'box_client_secret', 'rabbitmq username', 'rabbitmq password', 'overseerr_api_key', 'google cloud application default credentials (adc)', 'telegram_phone_number', 'spotify clientid', 'spotify clientsecret', 'mcp_auth_username', 'mcp_auth_password', 'firecrawl_api_url', 'api_key_id', 'api_secret_key', 'infini_api_key', 'task_manager_api_key', 'helius_rpc_url', 'nile_api_key', 'nile_workspace_slug', 'clickup_api_token', 'rapid_api_key_football', 'letta_base_url', 'letta_password', 'deriv_api_token', 'notion_integration_token', 'ragie_api_key', 'couchdb_url', 'api secret', 'freqtrade_username', 'freqtrade_password', 'ws_token', 'github_token (optional)', 'harvest api key', 'harvest oauth2', 'neon api key', 'anthropic api key', 'eclass_username', 'eclass_password', 'google_client_email', 'google_private_key', 'oauth_client_id', 'oauth_client_secret', 'oauth_token_url', 'db_timetable_client_id', 'db_timetable_client_secret', 'llm_token', 'anthropic_model', 'aws cli credentials', 'tracxn_access_token', 'skysql_api_key', 'accesscode', 'linear_api_token', 'supabase_anon_key', 'stellar wallet secret key', 'nvd_api_key', 'db_url', 'aws_session_token', 'aws_default_region', 'manifold_api_key', 'descope_project_id', 'descope_management_key', 'twilio account sid', 'twilio api key', 'twilio api secret', 'cockroachdb database url (user:password@host:port/database)', 'auth_token (for cluster metadata)', 'vidu_api_key', 'azure api key', 'discord_webhook_url', 'glif_api_token', 'firebase service account key', 'hive_username', 'hive_posting_key', 'hive_active_key', 'hive_memo_key', 'hdw_access_token', 'hdw_account_id', 'elastic_username', 'elastic_password', 'google oauth client id/secret (credentials.json)', 'es_ap_key', 'umami_username', 'umami_password', 'umami_team_id', 'umami_api_url', 'venice_api_key', 'remote_cuda_mvs_api_key', 'juhe_weather_api_key', 'moneybird_api_token', 'moneybird_administration_id', 'github token (推测)', 'slack token (推测)', 'aws_cognito_user_pool_id', 'aws_cognito_user_pool_client_id', 'exchangerate-api.com', 'openweathermap.org', 'newsapi.org', 'argocd_username', 'argocd_password', 'vault_token', 'cortellis_username', 'cortellis_password', 'twilio accountsid', 'twilio apikey', 'twilio apisecret', 'ngrok auth token', 'readwise reader api', 'jira api', 'abuseipdb_api_key', 'selector_ai_api_key', 'kubeconfig', 'gemini', 'deepseek', 'sonnet', 'other service-specific api keys depending on the server (e.g.', 'openai apikey', 'smtp email server username/password', 'santiment_api_key', 'rapidapi', 'selector_url', 'accesskeyid', 'accesskeysecret', 'github api token (未明确说明)', 'access_token (oauth 2.0)', 'promua_api_key', 'silicon flow', 'qwenlm', 'minimax', 'fireworks', 'ppio', 'github models', 'azure openai', 'mcp_secret', 'atlassian_user_email', 'atlassian_site_name', 'abstract_api_key', 'linear_access_token', 'linear_client_id', 'linear_client_secret', 'linear_redirect_uri', 'docbase_api_token', 'scraping_dog_api_key', 'app_id', 'app_secret', 'figma_api_token', 'google cloud api key (bigquery)', 'google cloud service account key', 'telegram_bot_token', 'icici_api_key', 'modal api credentials', 'sender (邮箱地址)', 'password (邮箱密码或app专用密码)', 'abstractapi', 'bitget', 'coinglass', 'brave_search_api_key', 'supabase_key', 'greenapi_api_token', 'instanceid', 'weather.api.api-key', 'hostinger.apikey', 'google.credentials', 'aws.accesskeyid', 'aws.secretaccesskey', 'gitlab', 'datadog', 'jenkins', 'docker', 'gcp', 'bitbucket', 'circleci', 'new relic', 'nexus', 'artifactory', 'prometheus', 'puppet', 'consul', 'elasticsearch', 'grafana', 'argo cd', 'brave search api', 'private_gpt_api_url', 'rsa public/private keys', 'ssl/tls certificates', 'proxy access header', 'api_key (for octoprint', 'repetier', 'prusa connect)', 'bambu_serial', 'bambu_token', 'creality cloud bearer token', 'dubco_api_key', 'coingecko_api_key', 'yuque_api_token', 'databricks_host', 'databricks_token', 'jira_personal_access_token', 'mssql_user', 'mssql_password', 'nebula_user', 'nebula_password', 'rootly_api_token', 'autumn api key', 'hf_api_key', 'triplewhale api key', 'confluence host url', 'username', 'password', 'salesforce_username', 'salesforce_password', 'salesforce_token', 'salesforce_consumer_key', 'salesforce_consumer_secret', 'salesforce_instance_url', 'dbt cloud api key', 'dify api key', 'modelscope', 'account_sid', 'from_number', 'tradovate_username', 'tradovate_password', 'tradovate_app_id', 'tradovate_app_version', 'tradovate_cid', 'tradovate_sec', 'jira_server_url', 'jira_auth_method', 'jira_password', 'service-to-service token (backstage)', 'loveable_api_key', 'spline_api_key', 'outline_api_key', 'juhe_key_simple_weather', 'qwen', 'gmail api credentials (oauth2)', 'unusual whales api key', 'plane_workspace_slug', 'google play developer api credentials', 'opensearch_username', 'opensearch_password', 'cloudinary_api_key', 'cloudinary_api_secret', 'armor_api_key', 'cohere_api_key', 'aipolabs_aci_api_key', 'linked_account_owner_id', 'claude pro subscription', 'oauth2.0', 'ldap', 'dingtalk', 'feishu', 'google oauth 2.0 client_id', 'google oauth 2.0 client_secret', 'telegram access key', 'agent key (env var)', 'google maps api key (推测)', 'secret_key', 'solana rpc url', 'solana wallet private key', 'sender_email', 'reply_to_email_addresses', 'google service account json key', 'google oauth 2.0 credentials', 'evolution_api_key', 'notional_id', 'account_pass', 'cert_pass', 'cert_path', 'jira_api_email', 'aligo_api_key', 'aligo_user_id', 'venice ai api', 'gemini api', 'ncbi api key (optional)', 'volcengine access key id', 'volcengine secret access key', 'region', 'application_id', 'prem_api_key', 'prem_project_id', 'obs_websocket_password', 'credentials.json', 'azure cli credentials', 'figma api key', 'pipecd_api_key_file', 'opencharge_map_api_key', 'google_map_api_key', 'confluence_access_token', 'project_connection_string', 'azure credentials (via az login)', 'xero_client_id', 'xero_client_secret', 'xero_client_bearer_token', 'github api token (gh_token)', 'thegraph_api_key', 'llm.apikey', 'mineru_api_key', 'anthropic claude mcp（可能需要）', 'mpesa_consumer_key', 'mpesa_consumer_secret', 'passkey', 'business_shortcode', 'callback_url', 'nvidia api key', 'openai api key (gpt-4o-mini)', 'figma access token', 'ollama (local)', 'other ai providers', 'arcanna_management_api_key', 'aiven_token', 'pica_secret', 'grist_api_key', 'mongodb_connection_string', 'hyperbrowser_api_key', 'scrappey_api_key', 'google cloud oauth2 credentials (gcp-oauth.keys.json)', 'okto_client_private_key', 'okto_client_swa', 'oauth_scope', 'cloudflare_api_token', 'cloudflare_account_id', 'make_api_key', 'sk-xxxxxxxxxx', 'xxxx-xxxx-xxxx-xxxx', 'paypal_environment', 'runbook_api_token', 'google serpapi', 'panel_access_token', 'infura_key', 'relevance auth token', 'spotify oauth', 'apifox_api_key', 'browsercat_api_key', 'databricks_http_path', 'giphy_api_key', 'notion api key (未明确说明)', 'ssb api key (if required)', 'claude pro/enterprise subscription (implied', 'not explicit)', 'hackmd_api_token', 'pagerduty_api_key', 'google ads api credentials', 'google_ads_credentials_path', 'google_ads_developer_token', 'google_ads_login_customer_id', 'vercel_api_token', 'trading_sim_api_key', 'github_access_token', 'github_webhook_secret', 'brex_api_key', 'snowflake_auth_type', 'snowflake_private_key_path', 'snowflake账号相关环境变量', 'cloudflare account', 'google_ads_login_customer_id (optional)', 'anilist_token', 'llm_api_key (如groq)', 'mailgun_api_key', 'issuer.api.client-secret', 'demo access code', 'axiom api token', 'frontapp api credentials', 'mavae_api_key', 'scraperis_api_key', 'sncf api key (navitia)', 'adfin_email', 'adfin_password', 'obsidian_api_key', 'credo_cheqd_testnet_mnemonic', 'google service account', 'jenkins credentials (likely', 'turso_api_token', 'turso_organization', 'gitlab_api_key', 'shopify partner account (api key likely required', 'but not specified)', 'pypi token (uv_publish_token)', 'pypi username/password (uv_publish_username', 'uv_publish_password)', 'freshdesk_api_key', 'api_key (未具体说明)', 'claude api (可能需要)', 'ollama (如需远程模型)', '其他第三方ai服务api', 'notion integration key', 'bocha_api_key', 'backstage static token', 'nps_api_key', 'hologres_user (access_id)', 'hologres_password (access_key)', 'azure', 'groq', 'vapi_org_id', 'vapi_private_key', 'vapi_knowledge_id', 'vapi_jwt_private', 'github api token', 'gmail oauth 2.0', 'personal_base_token', 'app_token', 'ntopng_api_key', 'ntopng_token', 'notion_page_id', 'oauth2 token', 'kbc_storage_token', 'kbc_workspace_schema', 'google_cse_id', 'box platform api key (推测)', 'sonarqube_token', 'llm_api_key (for openai', 'groq', 'singlestore_api_key', 'singlestore_db_username', 'singlestore_db_password', 'openweathermap（可能需要，未明确给出）', 'tweetbinder_api_token', 'linkedin client credentials', 'mcp_crewai_enterprise_server_url', 'mcp_crewai_enterprise_bearer_token', 'prometheus_username', 'prometheus_password', 'prometheus_token', 'virustotal_api_key', 'slack_app_token', 'pg_connection_string', 'gdrive_credentials_path', 'confluence_url', 'jira_url', 'clerk publishable key', 'clerk secret key', 'webdav_username', 'webdav_password', 'auth_username', 'auth_password', 'openai-api-key', 'brave-api-key', 'swarm_api_key', 'weatherapi.com', 'composio_api_key', 'solana_private_key', 'twitter_bearer_token', 'snowflake_user', 'snowflake_password', 'snowflake_private_key_file', 'snowflake_private_key_passphrase', 'harbor_username', 'harbor_password', 'aws_session_token (可选)', 'aps_client_id', 'aps_client_secret', 'aps_sa_id', 'aps_sa_email', 'aps_sa_key_id', 'aps_sa_private_key', 'apimatic_api_key', 'privatekey (仅链上写操作时需要)', 'onepanel_api_key', 'google drive api oauth client secret', 'google sheets api oauth token', 'agentrpc_api_secret', 'plausible_api_key', 'juhe_exchange_api_key', 'rpc_url (your_rpc_url)', 'api keys for supported networks (optional)', 'x-api-key', 'newsapi', 'coolify mcp credentials', 'microcms_service_domain', 'microcms_endpoint', 'memos_api_key', 'langbase_api_key', 'ohmygpt_api_key', 'cloudzero_api_key', 'coincap_api_key', 'privatekey (for write operations)', 'dropbox_app_key', 'dropbox_app_secret', 'ha_token (home assistant long-lived access token)', 'ipapi_api_token', 'youtube_client_id', 'youtube_client_secret', 'youtube_refresh_token', 'connectwise_api_url', 'connectwise_company_id', 'connectwise_public_key', 'connectwise_private_key', 'connectwise_auth_prefix', 'model_deployment_name', 'ai_search_connection_name', 'bing_connection_name', 'ai_search_index_name', 'azure_search_service_endpoint', 'azure_search_api_key', 'twilio_api_key', 'twilio_api_secret', 'heweather api key', 'tms_token', 'access token', 'climatiq_api_key', 'juhe_mobile_location_api_key', 'api key (可选)', 'eolink_api_key', 'azure ad application client id', 'azure ad application client secret', 'azure tenant id', 'toshl_api_token', 'spotify api (client_id', 'client_secret)', 'note_gql_auth_token', 'note_session_v5', 'claude ai', 'cursor ai', 'windsurf', 'coolify_token', 'youtube_translate_api_key', 'kaltura_partner_id', 'kaltura_admin_secret', 'kaltura_user_id', 'pi_api_key', 'auth-token', 'claude api key (需用户自备)', 'cursor集成无需额外api key', 'firebase 服务账号密钥（本地模式）', 'firebase web api key（cloudflare workers 模式）', 'gmail api key (可能)', 'github api key (可能)', 'brave search api key (可能)', '其他各子服务api key', 'alpha vantage api key', 'coingecko api key', 'exchange rate api key', 'gnews api key', 'mcp_sqlite_filename', 'mcp_postgres_host', 'mcp_postgres_port', 'mcp_postgres_database', 'mcp_postgres_user', 'mcp_postgres_password', 'mcp_postgres_ssl', 'mcp_mssql_server', 'mcp_mssql_port', 'mcp_mssql_database', 'mcp_mssql_user', 'mcp_mssql_password', 'mcp_mssql_encrypt', 'mcp_mssql_trust_server_certificate', 'mcp_mongodb_uri', 'mcp_mongodb_database', 'mcp_mongodb_max_pool_size', 'mcp_mongodb_use_unified_topology', 'asana_api_key', 'devhub_api_key', 'devhub_api_secret', 'bankless_api_token', 'google cloud api key', 'mysql credentials', 'postgresql credentials', 'stripe api key', 'serper api key', 'wolframalpha api key', 'contentful_space_id', 'contentful_access_token', 'contentful_preview_access_token', 'figma', 'huggingface', 'mcp_perplexity_api_key', 'slack_bot_user_oauth_token', 'twitter_access_secret', 'reddit api (client_id', '等)', 'booking_com_api_key', 'openweather api key', 'fiberflow-mcp-server-secret', 'bunnyshell api token', 'bns_api_key', 'promptz_api_key', 'promptz_api_url', 'airtable api key', 'nylas api key', 'odoo_url', 'odoo_db', 'db_username', 'db_database', 'agentcraft_bearer_token', 'google_application_credentials (google cloud service account json key)', 'google sheets service account json', 'uv_publish_token', 'uv_publish_username', 'uv_publish_password', 'spotify api (推测)', 'mistral api key', 'spotify oauth (client id', 'client secret)', 'flipt_api_key', 'graphql_api_key', 'alpha vantage api key', 'fibery api token', 'openai api key（仅在与 openai agents sdk 集成时需要）', 'google oauth 2.0 credentials (gcp-oauth.keys.json)', 'google cloud application default credentials', 'zotero_api_key', 'powerplatform_client_id', 'powerplatform_client_secret', 'powerplatform_tenant_id', 'argocd_token', 'dataforseo_login', 'dataforseo_password', 'localfalcon_api_key', 'google cloud oauth credentials (gcp-oauth.keys.json)', 'google_cloud_project', 'google_cloud_location', 'vertex_location', 'cvex api key', 'private key (pem file)', 'postman api key', 'asana_token', 'riksbanken_api_key', 'oura_personal_access_token', 'oura_client_id', 'oura_client_secret', 'eight_sleep_email', 'eight_sleep_password', 'eight_sleep_user_id', 'eight_sleep_client_id', 'eight_sleep_client_secret', 'not-needed', 'val_town_api_token', 'lexware_office_api_key', 'glean_api_key', 'radarr_api_key', 'sonarr_api_key', 'ngrok_authtoken', 'cw_client_id', 'your_api_key_here', 'github access token', 'veyrax api key', 'replicate_api_token', 'graphdb_username', 'graphdb_password', 'gitee_access_token', 'superset_username', 'superset_password', 'minimax_api_key', 'minimax_group_id', 'hubble_api_key', 'render_api_key', 'smtp_username', 'smtp_password (gmail app password)', 'github personal access token (github_token)', 'juhe.news.api-key', 'trilium_api_token', 'superset_url', 'msf_rpc_username', 'msf_rpc_password', 'medium_client_id', 'medium_client_secret', 'medium_redirect_uri', 'coinbase_api_key_name', 'coinbase_api_private_key', 'seed_phrase', 'coinbase_project_id', 'pinata_jwt', 'chain_id', 'firebase', 'gmail api (oauth2)', 'github api (personal access token)', 'openai api', 'ninjarmm clientid', 'ninjarmm clientsecret', 'page_id', 'brave search api key', 'perplexity api key', 'bluesky app password', '其他 llm provider 的 api_key', 'wordware_api_key', 'whoop_client_id', 'whoop_client_secret', 'whoop_redirect_uri', 'yelp fusion api (likely required for server-yelp-fusionai)', 'others possible but not specified', 'dnsdumpster_api_key', 'etherscan', 'coinmarketcap', 'coingecko', '部分无需api key（如coincap mcp）', 'birdeye_api_key', 'ps_openaiapikey', 'ps_deepseekapikey', 'ps_anthropicapikey', 'ps_metaapikey', 'ps_googleapikey', 'brave search api (likely required', 'but not explicitly shown)', 'bing_api_key', 'fpl_email', 'fpl_password', 'fpl_team_id', 'whatsapp api key', 'netlify_access_token', 'dune_api_key', 'bearer fetch (local token)', 'ibkr api credentials', 'google oauth 2.0 client id', 'google oauth 2.0 client secret', 'nfd_api_key', 'vestige_api_key', 'algorand_token', 'airtable api token', 'airtable base id', 'sanity_api_token', 'sanity_project_id', 'sanity_dataset', 'zoomeye_api_key', 'railway api token', 'youtube data api key', 'freeimage_api_key', 'removebg_api_key', 'crossmint_api_key', 'resend_api_key', 'helius_api_key (optional)', 'slack_api_token', 'tencentcloud_secret_id', 'tencentcloud_secret_key', 'vrchat_username', 'vrchat_password', 'vrchat_totp_secret', 'vrchat_email', 'tfc_token', 'adjust api key', 'azure_storage_account_url', 'azure_cosmosdb_endpoint', 'azure_cosmosdb_key', 'azure_app_configuration_endpoint', 'dify_app_sks', 'wazuh_user', 'wazuh_pass', 'bearer token', 'basic auth', 'raccoon_secret_key', 'raccoon_passcode', 'modelscope api key', 'dashscope api key', 'alibaba cloud api key', 'tempo api token', 'jira api token', 'kite_api_key', 'kite_api_secret', 'recraft_api_key', 'astra_db_application_token', 'astra_db_api_endpoint', 'whale_alert_api_key', 'tikneuron_mcp_api_key', 'eth_l2_rpc', 'clover_client_id', 'clover_client_secret', 'microsoft graph api oauth 2.0 credentials (client_id', 'pipedrive_api_token', 'authorization (for sse servers)', 'nasa api (未明确说明)', 'x-api-key (from api_key.txt)', 'n8n api key（需在.env中配置，字段名未明确）', 'sanity_token', 'pushover application token', 'pushover user key', 'backlog_api_key', 'jwt', 'digitalocean api token', 'obsidian_api_token', 'agent.ai api token', 'github api token（推测）', 'findmine_app_id', 'backlog_space_url', 'uspto odp api key', 'api_base_url', 'api_headers (如authorization: bearer your-token-here)', 'basecamp_client_id', 'basecamp_client_secret', 'basecamp_account_id', 'notion api key (推测)', 'intercom_access_token', 'clickup api key (推测)', 'zbd_api_key', 'codecov_api_key', 'timezone_db_api_key', 'reddit api credentials', 'api_key (mcp server', 'optional)', 'mattermost personal access token', 'together ai', 'claude api', 'trello api', 'osmosis_mnemonic', 'neynar_api_key', 'milvus_token (optional', 'only if milvus requires authentication)', 'x_api_key', 'x_api_key_secret', 'x_access_token', 'x_access_token_secret', 'aws access key id', 'aws secret access key', 'iam role', 'mcp_server_deepseek_api_key', 'tasker api key', 'google oauth2 client_secret.json', 'xai/grok', 'fal.ai', 'nvidia dna generator api', 'jampp_client_id', 'jampp_client_secret', 'discourse_api_key', 'azure key vault', 'privatekey', 'shopify_shop_name', 'frappe_api_key', 'frappe_api_secret', 'jira_api_mail', 'esa_api_key', 'other third-party service keys as required by specific servers', 'linkedin_client_id', 'linkedin_client_secret', 'azure account/token (通过azure cli/msi等方式认证)', 'google_calendar_id', 'email_from', 'business_email', 'azure-token', 'azuredevops.token', 'azure_devops_token', 'genai (gemini api key', 'not specified)', 'milvus_token', 'mkinf_api_key', 'rpc_url', 'influxdb_token', 'twitter_cookies', 'twitter_2fa_secret', 'fingertip_api_key', 'artifacts_mmo_token', 'telegram_chat_id', 'tugboat_api_key', 'greenapi_id_instance', 'other service-specific tokens (e.g.', 'etc. as needed per server)', 'privatekey (for signing transactions', 'provided per request)', 'ado_pat', 'ssh_api_url', 'jigsawstack_api_key', 'firebase_api_key', 'pubmed_api_key', 'clinical_trials_api_key', 'fda_api_key', 'thingspanel api key', 'shared_secret (generated via handshake', 'not a static api key)', 'sqlitecloud apikey', 'upstash_email', 'upstash_api_key', 'readwise api key', 'logfire_read_token', 'cloudflare browser rendering api (通过cloudflare worker url间接配置)', 'volcengine region', 'tradier sandbox api token', 'n8n_webhook_username', 'n8n_webhook_password', 'apifox_access_token', 'cosmosdb_uri', 'cosmosdb_key', 'cosmos_database_id', 'cosmos_container_id', 'cloudinary_cloud_name', 'turso_database_url', 'turso_auth_token', 'aptos_private_key', 'panora_api_key', 'jina_ai_api_key', 'rapidapi (linkedin profile server', 'not detailed in content)', 'glean_api_token', 'glean_subdomain', 'glean_act_as', 'fetch_weather_by_location_tool', 'pat', 'mallory_api_key', 'autumn api key (public or secret)', 'protonmail_username', 'protonmail_password', 'basic auth', 'resos api key', 'groq cloud api key', 'dingtalk_bot_access_token', 'dingtalk_bot_secret', 'cryptopanic_api_key', 'gmail', 'qdrant', 'firebase service account key (service_account_key_path)', 'notion_token', 'directus_admin_token', 'webhook_token (ntfy可选)', 'imgur clientid (可选)', 'polygon_mainnet_rpc', 'polygon_amoy_rpc', 'ethereum_rpc_url', 'adspirer api key (for amazon advertising)', 'browserbase_api_token', 'remote_install_key (dify 平台相关，可选/部分场景)', 'vectorize_org_id', 'vectorize_token', 'vectorize_pipeline_id', 'pbs_api_subscription_key', 'make_zone', 'make_team', 'opik_api_key', 'amazon bedrock api key', 'google vertex ai api key', 'reddit_client_id', 'reddit_client_secret', 'reddit_user_agent', 'dingding_bot_webhook_key', 'dingding_bot_sign_key', 'claude (if using claude desktop', 'requires claude account/api key/config)', 'other ai assistant api keys as needed (not specified in detail)', 'namecheap_api_key', 'namecheap_username', 'genai（可能需要api key，但未明确说明）', 'vectorize_api_key', 'appwrite_api_key', 'appwrite_project_id', 'unleash_auth_token', 'zenml_store_api_key', 'databricks_sql_warehouse_id', 'timeplus_user', 'timeplus_password', 'sasl.username', 'sasl.password', 'db_server', 'eventbrite_api_key', 'nyt_api_key', 'nasa_api_key', 'mongodb connection string (username/password)', 'dify_api_key', 'hass_token', 'pb_admin_email', 'pb_admin_password', 'google generative ai key (gemini)', 'sketchfab_api_key', 'api key（具体名称未给出）', 'gmaps_api_key', 'stakpak_api_key', 'linear_refresh_token', 'fal_secret', 'xai_api_key', 'nvidia_api_key', 'dropbox_redirect_uri', 'token_encryption_key', 'weather api', 'artemis api key', 'artemis snowflake login', 'safetyculture api key', 'twitter_oauth_client', 'twitter_client_secret', 'mastodon_client_secret', 'mastodon_client_key', 'mastodon_access_token', 'linkedin_access_token', 'ticktick client id', 'ticktick client secret', 'ticktick access token', 'hedera_operator_id', 'hedera_operator_key', 'ncbi_api_key', 'azure devops api token (推测)', 'ipinfo_api_key', 'google_cx', 'privategpt api url/token（需自备）', 'rsa密钥对（id_rsa', 'id_rsa_public.pem）', 'proxy header（如有代理）', 'neon api key (for local use)', 'oauth (for remote use', 'no api key needed in client)', 'things authentication token', 'openfga_token', 'openfga_client_id', 'openfga_client_secret', 'openfga_api_issuer', 'openfga_api_audience', 'snowflake_account', 'snowflake_username', 'financial_datasets_api_key', 'doris_user', 'doris_password', 'brian api key (推测，需要在.env中配置)', 'keywords_everywhere_api_key', 'openai (implied)', 'google/gemini (implied)', 'openrouter.ai (implied)', 'fathom_api_key', 'tidb_host', 'tidb_port', 'tidb_username', 'tidb_password', 'tidb_database', 'blockfrost', 'maestro', 'perplexity api key', 'deepseek api key', 'obsidian local rest api plugin', 'gitee_personal_access_token', 'azure entra id client id', 'azure entra id client secret', 'story_api_key', 'storyscan_api_endpoint', 'rpc_provider_url', 'google_search_engine_id', 'untapped_api_client_id', 'untapped_api_client_secret', 'strapi_api_token', 'google cloud service account credentials (google_application_credentials)', 'meilisearch_api_key', 'google_places_api_key', 'backlog_space_id', 'coolify_access_token', 'linear api', 'ucloud_public_key', 'ucloud_private_key', 'moodle_api_token', 'lighthouse transfer token url', 'flw_secret_key', 'imgflip_username', 'imgflip_password', 'up_token', 'onesignal_app_id', 'onesignal_api_key', 'onesignal_org_api_key', 'strateegia_api_key', 'garmin_email', 'garmin_password', 'backlog api key', 'bigmodel_api_key', 'jwt_secret_key', 'admin_password', 'usegrant_api_key', 'your-api-key', 'tembo_api_key', 'google_encrypt_secret', 'google_encrypt_salt', 'upstash_redis_url', 'upstash_redis_token', 'tinybird_token', 'anthropic/openai/aws bedrock/gemini/groq/ollama llm api key', 'next_public_ollama_model', 'google_pubsub_topic_name', 'google_pubsub_verification_token', 'anthropic api key (optional)', 'openai api key (optional)', 'swytchcode_api_key', 'snyk_api_key', 'snyk_org_id', 'aimlapi_key', 'sgai_api_key', 'vercel_access_token', 'ntropy api key', 'gitlab_credentials.api_key', 'kibela_token', 'exa_search_api_key', 'cloudflare_api_key', 'cloudflare_api_email', 'azdo_pat', 'github_pat', 'projectid', 'cockroachdb database url (user/password)', 'auth_token (可选，用于集群元数据)', 'zotero_user_id', 'workos_api_key', 'workos_client_id', 'sap credentials (system', 'client', 'user', 'password)', 'lichess_token', 'verodat_ai_api_key', 'hyperbolic_api_key', 'bearer token (creality)', 'prusa connect api_key', 'trello_board_id', 'api_key (custom', 'user-defined in config.json)', 'auth0 credentials', 'teamretro_api_key', 'teamretro_username', 'teamretro_password', 'teamretro_token', 'oura_api_token', 'untappd api key', 'smtp user', 'smtp pass', 'google gemini 1.5 pro', 'grid_api_key', 'cloudflare worker url (browser_rendering_api)', 'netbox_token', 'whimsical api key (implied', 'but not documented)', 'firebase service account key', 'worldpay_username', 'worldpay_password', 'weik.io api key', 'hex_api_key', 'azure_ad_client_id', 'azure_ad_client_secret', 'nostr private key', 'mixpanel service account username', 'mixpanel service account password', 'mixpanel project id', 'seq_api_key', '智谱api key', 'openai api key', 'deepseek api key', 'datadog_api_key', 'datadog_app_key', 'litellm (需外部大模型api key，未具体说明)', 'nsw_transport_api_key', 'ai core credentials', '其他支持的llm provider api key', 'ntropy api key', 'edubase_api_app', 'edubase_api_key', 'todoist_api_token', 'senechal_api_key', 'apifox access token', 'ngrok authtoken', 'lark_user_id', 'lark_calendar_id', 'lark_user_access_token', 'flomo api key', 'servicenow_username', 'servicenow_password', 'servicenow_api_key', 'servicenow_client_id', 'servicenow_client_secret', 'watsonx_project_id', 'watsonx_apikey', 'watsonx_url', 'bitbucket_api_token', 'ankr_api_key', 'triplewhale_api_key', 'notion api key', 'mcp-session-id', 'gcp_project_id (仅dataflow等云runner需要)', 'google_ai_api_key', 'google_token_file', 'google_credentials_file', 'raindrop.io api token', 'fireflies_api_key', 'seniverse_api_key', 'notion api token', 'linear api token', 'your_secret_key_here', 'rember_api_key', 'akshare_api_key', 'opendal_mys3_access_key_id', 'opendal_mys3_secret_access_key', 'azure storage account key', 'google cloud storage key', 'crawlab_api_token', 'yapi_token', 'yapi_base_url', 'base_provider_url (需要api_key)', 'github_username', 'zoom_api_key', 'zoom_api_secret', 'emqx_api_key', 'emqx_api_secret', 'helius_api_key', 'spg_nft_contract', 'graphlit_organization_id', 'graphlit_environment_id', 'graphlit_jwt_secret', 'twitter_token', 'google_email_refresh_token', 'google_email_client_id', 'google_email_client_secret', 'valyu_api_key', 'coinbase_commerce_api_key', 'atlassian_email', 'atlassian_host', 'sumo_api_id', 'sumo_api_key', 'openai api key (推测)', 'iol_user', 'iol_pass', 'for sse transport)', 'google_api_key (for gemini integration', 'twitter api credentials', 'dify_secret_key', 'authtoken (optional', 'for sse servers)', 'jira username', 'jira password', 'mistralai', 'xai', 'cerebras', 'elevenlabs', 'scapegraph api key', 'api key（未具体说明类型）', 'admin key', 'instance secret', 'storyscan api endpoint', 'wallet private key', 'rpc provider url', 'railway_api_token', 'bearer token (from datafocus)', 'bearer token (datafocus)', 'biggo_mcp_server_client_id', 'biggo_mcp_server_client_secret', 'systemprompt api key', 'mysql_user/mysql_pass（如mysql服务需要）', 'airtable_api_key', 'pubmed_email', 'apify_token', 'db_session_key', 'cloudflare api key (未明确说明，但实际必需)', 'headless_agents_api_key', 'encoding workflow api credentials', 'omdb api key (optional)', 'dart_token', 'supabase project id', 'supabase database password', 'supabase postgresql connection string', 'cloudflare account (api token via wrangler cli', 'implied)', 'couchdb username/password', '（可能需要openai api key，未明确说明）', 'rijksmuseum_api_key', 'ai provider api key (e.g.', 'anthropic)', 'google ai studio', 'alibaba', 'db_connection', 'github copilot', 'ollama (本地模型可选)', 'authtoken', 'figma-api-key', 'o1', 'vertex ai', 'dall-e-3', 'elevenlabs', 'mcp_brave_api_key', 'mcp_openai_api_key', 'mcp_serper_api_key', 'mcp_weather_api_key', '阿里云dashscope api key', 'deepinfra api key', 'systemprompt api key', 'everart api key', 'google drive api key', 'github api key', 'gitlab api key', 'google maps api key', 'sentry api key', 'spotify api key', 'axiom api key', 'cloudflare api key', 'qdrant api key', 'neon api key', 'pbs api key', 'whatsapp api key', 'framelink figma api key', 'sentry api token', 'confluence username', 'confluence password', 'chroma_api_key', 'chroma_cohere_api_key', 'chroma_openai_api_key', 'chroma_jina_api_key', 'chroma_voyageai_api_key', 'chroma_roboflow_api_key', 'chroma_custom_auth_credentials', 'netlify_auth_token', 'firecrawl_key', 'twitch_client_id', 'twitch_client_secret', 'digitalocean_token', 'make_dot_com_api_key', 'bitcoin_lnbits_admin_key', 'bitcoin_lnbits_read_key', 'smartsheet_api_key', 'azure_openai_api_base', 'azure_openai_api_version', 'azure_openai_deployment', 'hypernym_api_key', 'attio_api_key', 'ghost_admin_api_key', 'google cloud oauth 2.0 client id (client_secret.json)', 'google oauth2.0 clientid', 'google oauth2.0 clientsecret', 'google calendar id', 'llm_provider_api_key', 'audiense_client_id', 'audiense_client_secret', 'twitter_bearer_token (optional)', 'nps api key', 'opsbeacon_token', 'api_url', 'libsql_auth_token', 'aqicn_api_key', 'google ai', 'access_token_secret', 'fire_crawl_api_key', 'gohighlevel api credentials', 'wegene open api key', 'wegene open api secret', 'databaseurl', 'dbpath', 'perspective_api_key', 'twitch graphql client id', 'quake_api_key', 'nvidia nim api_key', 'ollama api_key', 'ticketmaster api key (consumer key)', 'jimeng_api_token (即梦 sessionid)', 'google.api_key', 'google.cse_id', 'kibela_team', 'telegram bot token', 'rcon credentials', 'google pagespeed insights api key', 'redis 连接字符串（如redis_url）', 'your_weaviate_api_key', 'syften_api_key', 'portkey_api_key', 'authorization bearer (for target apis', 'not for mcp server itself)', 'myshopify_domain', 'airflow_host', 'api_keys（需用户自备，未具体列出）', 'rpcuser', 'rpcpassword', 'uc_token', 'deepseek api key', 'clickup_client_id', 'clickup_client_secret', 'clickup_redirect_uri', 'authorization (for target apis', 'default_esa_team', 'langfuse_public_key', 'langfuse_secret_key', 'langfuse_baseurl', 'cookie', 'lunchmoney_token', 'google pagespeed insights api (未明确说明)', 'dify api key', 'dify application secret key', 'postman_api_key', 'mysql user/password', 'better_auth_project_id', 'better_auth_api_key', 'access_header', 'public_key', 'waldur_token', 'waldur_api_url', 'nostr_nsec_key', 'ipinfo_api_token', 'lnbitsadminkey', 'lnbitsreadkey', 'webshare_proxy_username', 'webshare_proxy_password', 'openrouter api key', 'okta_org_url', 'usage_metrics_key', 'usage_project_id', 'cdata_connect_cloud_pat', 'opensearch-api-key', 'bear_api_token', 'webflow_api_token', 'serpapi', 'nostr private key (nsec)', 'postgresql/supabase', 'google cloud service account key (implied', 'systemprompt-mcp-interview api key', 'mcp_secret_key', 'mcp_api_token', 'mcp_redis_password', 'mcp_smtp_password', 'ghost_api_url', 'ghost_staff_api_key', 'claude 3.5 sonnet', 'blastengine_user_id', 'blastengine_api_key', '21st.dev magic api key', 'openfec_api_key', 'wolfram_llm_app_id', 'ak', 'sk', 'secret_token', 'authorization', 'jira_domain', 'mapbox_access_token', 'ideogram_api_key', 'fmp_api_key', 'google-api-key', 'custom-search-engine-id', 'devrev_api_key', 'cfb_api_key', 'steel_api_key', 'http_header_authorization', 'google cloud oauth 2.0 credentials (gcp-oauth.keys.json)', 'google pagespeed insights api key', 'semantic_scholar_api_key', 'piapi_api_key', 'dify_api_keys', 'arango_url', 'arango_database', 'arango_username', 'arango_password', 'box_dev_token', 'gentoro_api_key', 'gentoro_bridge_uid', 'glide_api_key', 'wordpress application password', 'cosense_project_name', 'cosense_sid (optional)', 'wecom_webhook_url', 'stability_ai_api_key', 'eth_node_url', 'cmc_api_key', 'feishu bot credentials', 'shotgrid_script_name', 'shotgrid_script_key', 'shotgrid_url', 'marginalia_api_key', 'fillout_api_key', 'binance_api_secret', 'glean_domain', 'neodb access token', 'loxo_api_key', 'loxo_agency_slug', 'motherduck_token', 'dify_api_backend_key', 'stack_exchange_key', 'finnhub_api_key', 'raindrop_token', 'connect_api_key', 'usescraper_api_key', 'lightdash_api_key', 'lightdash_api_url', 'jira_user_email', 'tiingo_api_key', 'holaspirit_api_token', 'google cloud oauth2.0 client id', 'google cloud oauth2.0 client secret', 'stormglass_api_key', 'examples_client_holaspirit_api_token', 'examples_client_holaspirit_organization_id', 'x_api_secret', 'placid_api_token', 'google oauth client id/secret', 'coinbase_cdp_api_key_name', 'coinbase_cdp_private_key', 'iaptic api key', 'twitter_client_id', 'google cloud oauth credentials (client_id', 'ticketmaster_api_key', 'trackingtime api key', 'systemprompt_api_key', 'polymarket api key', 'polymarket wallet address', 'osc_access_token', 'confluence_api_key', 'bitbucket_token', 'bitbucket_username', 'bitbucket_password', 'github_token_1', 'github_owner_1', 'github_token_xxx', 'bitbucket_app_password', 'apptweak_api_key', 'brave_api_key', 'gcs_project_id', 'gcs_client_email', 'gcs_private_key', 'gcs_bucket_name', 'amadeus_api_key', 'amadeus_api_secret', 'duffel api key', 'peakmojo_api_key', 'tally_api_key', 'cosense_sid', 'gyazo_access_token', 'local rest api plugin api key', 'zotero_library_id', 'google oauth client id/secret (gcp-oauth.keys.json)', 'grafana_api_key', 'netskope_api_key', 'elasticsearch_username', 'elasticsearch_password', 'wecom_bot_webhook_key', 'video jungle api key', 'clickhouse_host', 'clickhouse_user', 'clickhouse_password', 'box_jwt_base64', 'box_user_id', 'cf_apihost', 'cf_username', 'cf_password', 'cf_org', 'cf_space', 'gcp_project (google cloud platform credentials)', 'metatool_api_key', 'sap_url', 'sap_user', 'sap_password', 'sap_client', 'sap_language', 'shopify_password', 'govee_api_key', 'skrape_api_key', 'flux_api_key', 'keycloak_admin', 'keycloak_admin_password', 'transistor_api_key', 'github_owner', 'together_ai_api_key', 'oauth2 provider code', 'qb_time_access_token', 'auth_basic_username', 'auth_basic_password', 'auth_bearer', 'auth_apikey_header_name', 'auth_apikey_value', 'roam_api_token', 'roam_graph_name', 'azure_storage_connection_string', 'skyfire_api_key', 'app_store_connect_key_id', 'app_store_connect_issuer_id', 'app_store_connect_p8_path', 'vikingdb_ak', 'vikingdb_sk', 'gcp_project_id', 'gcp_location', 'huntress_api_key', 'huntress_api_secret', 'authority_id', 'api_secret', 'coinmarket_api_key', 'unichat_api_key', 'raygun_pat_token', 'home_assistant_api_token', 'angleone_api_key', 'angleone_client_id', 'angleone_password', 'angleone_token', 'your_unichat_api_key', 'your_pypi_api_token', 'apify_api_token', 'read api key', 'write api key', 'phabricator api token', 'cloudflare api key (未在文档中明确说明)', 'google cloud service account key', 'gcloud cli application default credentials', 'ha_token', 'emojikeyio_api_key', 'cloudflare api token (用于wrangler部署和email routing api)', 'mcp secret（通过npx workers-mcp secret generate生成）', 'x-api-key', 'snowflake_warehouse', 'snowflake_database', 'snowflake_role', 'snowflake_schema', 'kintone username', 'kintone password', 'kintone app token', 'salesforce credentials (具体字段未列出，通常包括client_id', 'security_token)', 'singlestore_host', 'singlestore_port', 'singlestore_user', 'singlestore_password', 'singlestore_database', 'metoro_auth_token', 'metoro_api_url', 'mongodb connection string (含用户名、密码)', 'bluesky_username', 'bluesky_password', 'pypi token (仅开发/发布时需要)', 'asana_access_token', 'ns_api_key', 'zendesk credentials (具体字段未明示，需查阅.env.example)', 'llama_cloud_api_key', 'unomi_key', 'unomi_username', 'unomi_password', 'fr24_api_key', 'google cloud oauth2.0 (gcp-oauth.keys.json)', 'organization api key (for some enterprise features)', 'google pagespeed insights api key (implied', 'not explicitly shown)', 'kagi', 'brave search', 'google maps', 'oauth_refresh_token', 'toolhouse_api_key', 'azure devops credentials (likely pat or oauth token)', 'arc_username', 'arc_password', 'elevenlabs_voice_id', 'google oauth credentials', 'resource_hub_token', 'paperless-ngx api token', 'elevenlabs_model_id', 'shortcut api token', 'authorization (可选，连接需要鉴权的sse服务时)', 'strapi jwt token', 'meili_master_key', 'agiverse_api_key', 'obsidian local rest api apikey', 'toolhouse_bundle_name', 'intercom_api_key', 'homeassistant_token', 'openai_org_id', 'aws credentials (access key', 'secret key', 'sso', '本地 ~/.aws/ 配置)', 'zendesk credentials (likely api token', 'chatanthropic (推测需要)', 'epo-ops api key', 'wipo api key', 'uspto patentsview api key', 'rapidapi patent scoring api key', 'pinecone api key', 'bybit_api_secret', 'api keys（需用户自备，未具体说明字段名）', 'tavily api key', 'canvas api token', 'google api key', 'azure_open_ai_api_key', 'claude api key（需自行配置，未明确说明具体名称）', 'google oauth2 client id', 'google oauth2 client secret', 'google oauth2 refresh token', 'pocket_consumer_key', 'pocket_access_token', 'screenshotone_api_key', 'contentful_management_access_token', 'app identity (app-id', 'private-key', 'space-id', 'environment-id)', 'twitter api key', 'twitter api secret', 'twitter access token', 'twitter access token secret', 'twitter bearer token', 'pypi token (uv_publish_token)', 'pypi username/password (uv_publish_username', 'weather api (具体未说明)', 'api key (for web api authentication)', 'twitter api key (推测)', 'google sheets api key (推测)', 'auth-token (可选，取决于数据库配置)', 'drupal_auth_token', 'drupal_auth_user', 'drupal_auth_password', 'google drive oauth 2.0 client_id', 'google drive oauth 2.0 client_secret', 'prometheus_url', 'google api oauth credentials (未在文档中明确说明)', 'salesforce api credentials (client id', 'client secret', 'security token)', 'query_api_key', 'google cloud oauth2 credentials (client_creds.json)', 'telegram bot token', 'chat id', 'gentoro_base_url', 'gentoro_key', 'git_pat_token', 'google cloud oauth', 'secret_api_key', 'shared_secret', 'pypi token (仅用于发布，不是服务运行必需)', 'rememberizer_api_token', 'unomi_base_url', 'unomi_profile_id', 'unomi_source_id', 'unomi_email', 'openai_key', 'pyroprompts_key', 'perplexity_key', 'github/gitlab token', 'google cloud project id', 'google cloud service account key (optional but recommended)', 'gcloud cli authentication (alternative to key file)', 'mongodb uri (username/password)', 'search1api', 'miro-oauth-key', 'perplexity', 'todoist', 'tb_api_url', 'tb_admin_token', 'mongodb connection url (username/password)', 'bluesky_app_key', 'mcp_server_submit_url', 'github token（可选/集成时用）', 'llama_cloud_project_name', 'flux api key', 'google oauth2 client_id', 'google oauth2 client_secret', 'cloudflare account (通过 wrangler login 认证，无需手动 apikey)', 'tradestation_api_key', 'tradestation_api_secret', 'ts_refresh_token', 'ts_account_id', 'ibkr_account_id', 'ibkr_client_id', 'ibkr_host', 'ibkr_port', 'cloudflare worker secret (.shared-secret)', '可能需要cloudflare api key（未明确）', 'search1api_key', 'claude pro/enterprise subscription (claude desktop)', 'google cloud project id', 'google cloud location', 'bearer token (可选/用于sse连接)', 'cloudflare api token/global api key', 'portainer_url', 'portainer_api_key', 'portainer_env_id', 'groq api', 'llm provider api (unspecified)', 'marvel_public_key', 'marvel_private_key', 'datadog api key', 'datadog application key', 'default_property_id', 'serpapi', 'acs_connection_string', 'acs_sender_address', 'buildkite_api_token', 'oauth kv namespace id', 'supabase personal access token', 'codex_api_key', 'redshift database_url (username/password)', 'nasa api key', 'codeberg_api_token', 'mssql_username', 'alpha vantage', 'mcp_auth_token', 'mcp_db_auth_token', 'solscan_api_key', 'balldontlie_api_key', 'konnect_access_token', 'unleash_api_token', 'naver_access_key_id', 'naver_secret_key', 'map_client_id', 'map_client_secret', 'sentinel_subscription_id', 'sentinel_resource_group', 'sentinel_workspace_name', 'sentinel_workspace_id', 'linkedin_username', 'linkedin_password', 'cookie_secret', 'bearer token for openapi endpoints (if required by the target api)', 'evolution_instancia', 'evolution_apikey', 'evolution_api_base', 'instagram_user_id', 'instagram_access_token', 'instagram_token', 'firebase admin sdk service account key']

    # 去重（保留顺序）
    seen = set()
    api_names = [x for x in api_names if not (x in seen or seen.add(x))]
    def norm_name(x):
        return x.replace('_', ' ').lower().strip()
    seen = set()
    uniq_api_names = []
    for x in api_names:
        n1 = x.strip()
        n2 = norm_name(x)
        if n1 not in seen and n2 not in seen:
            uniq_api_names.append(x)
            seen.add(n1)
            seen.add(n2)
    api_names = uniq_api_names
    # print(api_names)
    # api_names = []
    # 断点续传：加载已有进度
    all_results = []
    processed_names = set()
    if os.path.exists(progress_path):
        try:
            with open(progress_path, 'r') as pf:
                all_results = json.load(pf)
                for r in all_results:
                    n = r.get('信息名') or r.get('api_name')
                    if n:
                        processed_names.add(n)
            print(f"[断点续传] 已加载 {len(all_results)} 条历史进度")
        except Exception as e:
            print(f"加载进度文件失败: {e}")

    # 过滤已处理
    to_process = [n for n in api_names if n not in processed_names]
    print(f"[INFO] 待处理API数量: {len(to_process)}")

    connector = aiohttp.TCPConnector(limit_per_host=3)
    async with aiohttp.ClientSession(connector=connector) as session:
        semaphore = asyncio.Semaphore(semaphore_num)

        async def limited_task(name):
            async with semaphore:
                return await process_single_api(name, session)

        tasks = []
        for idx, name in enumerate(to_process):
            tasks.append(limited_task(name))
            if len(tasks) >= batch_size:
                batch_result = await asyncio.gather(*tasks)
                valid_results = [r for r in batch_result if r is not None]
                all_results.extend(valid_results)
                # 日志
                for r in valid_results:
                    n = r.get('信息名') or r.get('api_name')
                    print(f"[OK] {n} 处理完成")
                print(f"✅ 已完成批次: {len(valid_results)}条有效结果 (总计: {len(all_results)})")
                # 每 batch 写一次进度
                with open(progress_path, 'w', encoding='utf-8') as pf:
                    json.dump(all_results, pf, indent=2, ensure_ascii=False)
                tasks = []
        if tasks:
            batch_result = await asyncio.gather(*tasks)
            valid_results = [r for r in batch_result if r is not None]
            all_results.extend(valid_results)
            for r in valid_results:
                n = r.get('信息名') or r.get('api_name')
                print(f"[OK] {n} 处理完成")
            print(f"✅ 已完成批次: {len(valid_results)}条有效结果 (总计: {len(all_results)})")
            with open(progress_path, 'w', encoding='utf-8') as pf:
                json.dump(all_results, pf, indent=2, ensure_ascii=False)

    # 保存最终结果到JSON文件
    with open('api_pricing_results.json', 'w', encoding='utf-8') as f:
        json.dump(all_results, f, indent=2, ensure_ascii=False)

    # 输出为Excel文件
    try:
        import pandas as pd
        df = pd.DataFrame(all_results)
        for col in ["信息名", "信息类型", "是否找到价格", "价格", "免费额度", "搜索来源", "状态", "错误信息"]:
            if col not in df.columns:
                df[col] = ""
        df = df[["信息名", "信息类型", "是否找到价格", "价格", "免费额度", "搜索来源", "状态", "错误信息"]]
        df.to_excel("api_pricing_results.xlsx", index=False)
        print("已保存为 api_pricing_results.xlsx")
    except Exception as e:
        print(f"保存Excel失败: {e}")

    print("\n======= 最终结果摘要 =======")
    for res in all_results:
        name = res.get('信息名') or res.get('api_name') or '未知'
        price = res.get('价格') or res.get('price') or '未知'
        unit = res.get('信息类型') or res.get('pricing_unit') or '未知'
        free_quota = res.get('免费额度') or res.get('free_quota') or ''
        source = res.get('搜索来源') or res.get('source') or '未知'
        status = res.get('状态') or res.get('status') or '未知'
        error_info = res.get('错误信息') or res.get('error_info') or ''
        print(f"{name}: {price} (类型: {unit}) 免费额度: {free_quota} 搜索来源: {source} 状态: {status} 错误信息: {error_info}")


if __name__ == "__main__":
    asyncio.run(main())
